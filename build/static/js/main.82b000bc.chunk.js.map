{"version":3,"sources":["requests/Requests.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["virusName","onResultsFound","a","myFetcher","SparqlEndpointFetcher","fetchBindings","on","bindings","console","log","App","componentDidMount","fetchData","setState","searched","searchResults","fetchByVirusName","state","query","handleResults","result","tmpSearchResults","push","handleInputChange","search","value","resultsToPrint","this","map","className","name","src","image","comment","logo","alt","type","id","placeholder","ref","input","onChange","onClick","length","Fragment","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uYAIO,WAAiCA,EAAWC,GAA5C,eAAAC,EAAA,sEAEOC,EAAY,IAAIC,wBAFvB,SAG8BD,EAAUE,cACvC,6BACA,8SAQ8BL,EAR9B,qJALD,cAoBgBM,GAAG,QAAQ,SAACC,GACvBN,EAAeM,MArBpB,gDAwBDC,QAAQC,IAAI,sBAAZ,MAxBC,0D,sBCJQ,UAA0B,iCC6E1BC,G,yDApEb,aAAc,IAAD,8BACX,gBAQFC,kBAAoB,aATP,EAabC,UAAY,WACV,EAAKC,SAAS,CAACC,UAAS,EAAMC,cAAgB,KFnB3C,SAAP,6BEoBIC,CAAiB,EAAKC,MAAMC,MAAO,EAAKC,gBAf7B,EAmBbA,cAAgB,SAACC,GACf,IAAIC,EAAmB,EAAKJ,MAAMF,cAClCM,EAAiBC,KAAKF,GACtB,EAAKP,SAAS,CAACE,cAAcM,KAtBlB,EAyBbE,kBAAoB,WACpB,EAAKV,SAAS,CAAEK,MAAO,EAAKM,OAAOC,SAxBjC,EAAKR,MAAQ,CACXF,cAAgB,GAChBG,MAAQ,GACRJ,UAAW,GALF,E,qDA8BF,IACLY,EADI,OAeR,OAZGC,KAAKV,MAAMF,gBACZW,EAAiBC,KAAKV,MAAMF,cAAca,KAAK,SAACR,GAC9C,OACE,sBAAKS,UAAU,UAAf,UACE,6BAAKT,EAAOU,KAAKL,QACjB,qBAAKM,IAAKX,EAAOY,MAAMP,QACvB,4BAAIL,EAAOa,QAAQR,eAOzB,qBAAKI,UAAU,6BAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKE,IAAKG,EAAML,UAAU,WAAWM,IAAI,SACzC,0EAGA,uBAAON,UAAU,cACpBO,KAAK,OAAON,KAAK,SACjBO,GAAG,SACHC,YAAY,yCACZC,IAAM,SAAAC,GAAK,OAAI,EAAKhB,OAASgB,GAC7BC,SAAWd,KAAKJ,oBAEX,wBAAQmB,QAASf,KAAKf,UAAtB,2BACCe,KAAKV,MAAMH,UAAgD,IAApCa,KAAKV,MAAMF,cAAc4B,OAAe,qDAA0B,cAAC,IAAMC,SAAP,IAC3FlB,W,GA/DOmB,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.82b000bc.chunk.js","sourcesContent":["import {SparqlEndpointFetcher} from \"fetch-sparql-endpoint\";\n\n\n\nexport async function fetchByVirusName (virusName, onResultsFound)  {\n    try{\n        const myFetcher = new SparqlEndpointFetcher();\n        const bindingsStream = await myFetcher.fetchBindings(\n        'https://dbpedia.org/sparql', \n        `\n        SELECT ?virus ?name ?virusFamily ?comment ?image\n        WHERE {\n        ?virusFamily dct:subject dbc:Virus_families.\n        ?virus dbo:family ?virusFamily;\n        rdfs:label ?name;\n        rdfs:comment ?comment;\n        foaf:depiction ?image.\n        FILTER regex(lcase(?name), \"`+virusName+`\").\n        FILTER langMatches(lang(?name), \"en\").\n        FILTER langMatches(lang(?comment), \"fr\").\n        } ORDER BY ASC (?virus)\n        `\n        \n        );\n        bindingsStream.on('data', (bindings) => {\n            onResultsFound(bindings);\n        });\n    }catch(err){\n      console.log(\"somethin went wrong\", err);\n    }\n  }\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport {fetchByVirusName} from './requests/Requests';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      searchResults : [], // an array where the results found are added\n      query : '',         // the text typed into the search input\n      searched : false,   // defines if the \"Rechercher\" button has been pressed once\n    };\n  }\n\n  componentDidMount = () => {\n    //this.fetchData();\n  }\n\n  fetchData = () => {\n    this.setState({searched:true, searchResults : []});\n    fetchByVirusName(this.state.query, this.handleResults);\n  }\n\n\n  handleResults = (result) => {\n    let tmpSearchResults = this.state.searchResults;\n    tmpSearchResults.push(result);\n    this.setState({searchResults:tmpSearchResults});\n  }\n\n  handleInputChange = () => {\n\t\tthis.setState({ query: this.search.value });\n\t}\n\n \n  render () {\n    let resultsToPrint;\n    \n    if(this.state.searchResults){\n      resultsToPrint = this.state.searchResults.map( (result)=> {\n        return (\n          <div className=\"results\">\n            <h1>{result.name.value}</h1>\n            <img src={result.image.value}/>\n            <p>{result.comment.value}</p>\n          </div>\n        );\n      })\n    }\n\n    return (\n      <div className=\"disease-searcher-container\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            The Disease Searcher, by the HexaOne Team\n          </p>\n          <input className=\"home-search\"\n\t\t\t\t\t\t\ttype=\"text\" name=\"search\"\n\t\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\t\tplaceholder=\"Rechercher une maladie. ex:coronavirus\"\n\t\t\t\t\t\t\tref={ input => this.search = input }\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t/>\n            <button onClick={this.fetchData}>Rechercher ! </button>\n            {this.state.searched && this.state.searchResults.length === 0 ? <h2>Pas de r√©sultats</h2>:<React.Fragment/>}\n          {resultsToPrint}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}